*/
Given a numeric string A representing a large number you need to find the next smallest palindrome greater than this number.



Problem Constraints
1 <= |A| <= 100

A doesn't start with zeroes and always contain digits from 0-9.
Example Input
Input 1:

 A = "23545"
Input 2:

 A = "999"


Example Output
Output 1:

 "23632"
Output 2:

 "1001"
 
*/
 Code:

 bool isPalindrome(string &A, int i ,int j){
    while(i<j){
        if(A[i]!=A[j]) return 0;
        i++;
        j--;
    }
    return 1;
}
string addOne(string A){
    reverse(A.begin(),A.end());
    string str ="";
    int carry = 0;
    for(int i=0;i<A.size();i++)
     {
       if(i==0)
          {
             int digit = ((A[i]-'0') + 1) %10;
             str+=(char)(digit+'0');
             carry = ((A[i]-'0')+1)/10;
          }
       else
          {
             int digit = ((A[i]-'0') + carry) %10;
             str+=(char)(digit+'0');
             carry = ((A[i]-'0') + carry)/10;
          }
     } 
     if(carry)
      {
         str+="1";
      }
     reverse(str.begin(),str.end());
     return str;
}

bool compare(string A, string B){
    for(int i=0;i<A.length();i++){
        if(A[i]>B[i]) return 1;
        else if(A[i]<B[i]) return 0;
    }
    return 0;
}

string Solution::solve(string A) {
    int n=A.length();
    if(n==1) return "11";
    int i=0;
    int j=n-1;
    int k=(n+1)/2-1;
    
    if(isPalindrome(A,i,j)){
        A = addOne(A);
      
    }
   
    string x;
  
     n=A.length();
     j=n-1;
     k=(n+1)/2-1;
     
   
     
    if(n&1){
       string temp=A.substr(0,n/2);
       reverse(temp.begin(), temp.end());
       
         if(compare(temp,A.substr(k+1,n/2))==0){
           x=addOne(A.substr(0,k+1));
           A=x+A.substr(k+1,n/2);
       }    
       
       string y= A.substr(0,n/2);
       reverse(y.begin(), y.end());  
       A= A.substr(0,k+1)+y;
       
   }
   
    else{
       string temp=A.substr(0,n/2);
       reverse(temp.begin(), temp.end());
       
        if( compare(temp,A.substr(k+1,n/2))){
           A= A.substr(0,n/2)+temp;
       }
       else{
          string temp1= addOne(A.substr(0,n/2));
          string temp2= temp1;
          reverse(temp1.begin(), temp1.end());
          A= temp2+temp1;  
       }
  } 
  
    return A;
    
}
