*/
Given an integer A you need to find the Ath fibonacci number modulo 109 + 7.

The first fibonacci number F1 = 1

The first fibonacci number F2 = 1

The nth fibonacci number Fn = Fn-1 + Fn-2 (n > 2)



Problem Constraints
1 <= A <= 109.
Example Input
Input 1:

 A = 4
Input 2:

 A = 3


Example Output
Output 1:

 3
Output 2:

 2
 */

 Code: 
 
const int M =1e9+7;
vector<vector<long long int>> multiply(vector<vector<long long int>> mat1, vector<vector<long long int>> mat2){
    vector<vector<long long int>> ans(2, vector<long long int>(2,0));
    for(int i=0;i<2;i++){
        for(int j=0;j<2;j++){
            for(int k=0;k<2;k++){
                ans[i][j]= (ans[i][j] +mat1[i][k]*mat2[k][j])%M;
            }
        }
    }
    return ans;
}
vector<vector<long long int>> func(vector<vector<long long int>> &a, int A){
    if(A==1) return a;
    
    vector<vector<long long int>> temp=func(a,A/2);   
    if(A%2==0) return multiply(temp, temp);
    return multiply(temp, multiply(temp,a));
    
}
int Solution::solve(int A) {
    //use modulo exponentiation
    //as A is very big
    
    vector<vector<long long int>> a={{1,1},{1,0}};
    vector<vector<long long int>> ans=func(a,A);
    
    return ans[0][1]%M;
    
}

 
