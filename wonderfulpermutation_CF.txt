*/
You are given a permutation p1,p2,…,pn of length n and a positive integer k≤n.

In one operation you can choose two indices i and j (1≤i<j≤n) and swap pi with pj.

Find the minimum number of operations needed to make the sum p1+p2+…+pk as small as possible.

A permutation is an array consisting of n distinct integers from 1 to n in arbitrary order. For example, [2,3,1,5,4] is a permutation, but [1,2,2] is not a permutation (2 appears twice in the array) and [1,3,4] is also not a permutation (n=3 but there is 4 in the array).

*/

Code:

int32_t main(){
    int t;
    cin>>t;
    while(t--){
        int n, k;
        cin>>n>>k;
        vector<int> arr;
        for(int i=0;i<n;i++){
            int x;
            cin>>x;
            arr.push_back(x);
        }
        int s=0;
        for(int i=0;i<k;i++) s+=arr[i];
        set<int> st;
        for(int i=0;i<k;i++){
            st.insert(arr[i]);
        }

        int count=0;
        for(int i=1;i<=k;i++){
              if(st.find(i)==st.end()){
                count++;
              }
        }

        cout<<count<<endl;
    }



    return 0;
}